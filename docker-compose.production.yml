# OpenDAW Collaboration System - Complete Docker Setup
# 
# This docker-compose file runs the entire collaboration system:
# - PostgreSQL database
# - Redis cache
# - Collaboration server (WebSocket + API)
# - SynxSphere dashboard
# - OpenDAW studio
#
# Usage:
#   docker-compose -f docker-compose.production.yml up -d        # Start all services
#   docker-compose -f docker-compose.production.yml down         # Stop all services
#   docker-compose -f docker-compose.production.yml logs -f      # View logs

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: opendaw_postgres
    environment:
      POSTGRES_USER: opendaw
      POSTGRES_PASSWORD: collaboration
      POSTGRES_DB: opendaw_collab
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./opendaw-collab-mvp/src/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./opendaw-collab-mvp/src/database/02-init-additional-dbs.sh:/docker-entrypoint-initdb.d/02-init-additional-dbs.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U opendaw"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: opendaw_redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped

  # Collaboration Server
  collaboration:
    build:
      context: .
      dockerfile: Dockerfile.collaboration
    container_name: opendaw_collaboration
    environment:
      - DATABASE_URL=postgresql://opendaw:collaboration@postgres:5432/opendaw_collab
      - REDIS_URL=redis://redis:6379
      - WS_PORT=3005
      - HTTP_PORT=3003
      - NODE_ENV=production
      - LOG_LEVEL=info
    ports:
      - "3003:3003"
      - "3005:3005"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # SynxSphere Dashboard
  synxsphere:
    build:
      context: .
      dockerfile: Dockerfile.synxsphere
    container_name: opendaw_synxsphere
    environment:
      - DATABASE_URL=postgresql://opendaw:collaboration@postgres:5432/opendaw_collab
      - NEXT_PUBLIC_API_URL=http://localhost:3003/api
      - NEXT_PUBLIC_WS_URL=ws://localhost:3005
      - NEXT_PUBLIC_OPENDAW_URL=https://localhost:8080
    ports:
      - "3000:3000"
    depends_on:
      - collaboration
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # OpenDAW Studio
  opendaw:
    build:
      context: .
      dockerfile: Dockerfile.opendaw
    container_name: opendaw_studio
    environment:
      - OPENDAW_API_URL=http://collaboration:3003/api
      - OPENDAW_WS_URL=ws://collaboration:3005
      - SYNXSPHERE_URL=http://synxsphere:3000
    ports:
      - "8080:443"  # HTTPS
      - "8000:80"   # HTTP
    depends_on:
      - collaboration
      - synxsphere
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:443"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Development tools (optional)
  adminer:
    image: adminer:latest
    container_name: opendaw_adminer
    ports:
      - "8081:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      - postgres
    profiles:
      - dev
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: opendaw_network
    driver: bridge
