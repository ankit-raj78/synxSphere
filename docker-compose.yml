version: '3.8'

services:
  # PostgreSQL for structured data
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: syncsphere
      POSTGRES_USER: syncsphere
      POSTGRES_PASSWORD: syncsphere_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql

  # MongoDB for audio metadata and flexible data
  mongodb:
    image: mongo:6.0
    environment:
      MONGO_INITDB_DATABASE: syncsphere
      MONGO_INITDB_ROOT_USERNAME: syncsphere
      MONGO_INITDB_ROOT_PASSWORD: syncsphere_password
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./database/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Apache Kafka for event streaming
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # User Service
  user-service:
    build: ./services/user-service
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=syncsphere
      - POSTGRES_USER=syncsphere
      - POSTGRES_PASSWORD=syncsphere_password
      - MONGODB_URI=mongodb://syncsphere:syncsphere_password@mongodb:27017/syncsphere
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
    depends_on:
      - postgres
      - mongodb
      - redis
      - kafka

  # Audio Processing Service
  audio-service:
    build: ./services/audio-service
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=syncsphere
      - POSTGRES_USER=syncsphere
      - POSTGRES_PASSWORD=syncsphere_password
      - MONGODB_URI=mongodb://syncsphere:syncsphere_password@mongodb:27017/syncsphere
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
    volumes:
      - audio_uploads:/app/uploads
    depends_on:
      - postgres
      - mongodb
      - redis
      - kafka

  # Session Management Service
  session-service:
    build: ./services/session-service
    ports:
      - "3003:3000"
    environment:
      - NODE_ENV=development
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=syncsphere
      - POSTGRES_USER=syncsphere
      - POSTGRES_PASSWORD=syncsphere_password
      - MONGODB_URI=mongodb://syncsphere:syncsphere_password@mongodb:27017/syncsphere
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - postgres
      - mongodb
      - redis
      - kafka

  # AI Recommendation Service
  ai-service:
    build: ./services/ai-service
    ports:
      - "3004:3000"
    environment:
      - NODE_ENV=development
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=syncsphere
      - POSTGRES_USER=syncsphere
      - POSTGRES_PASSWORD=syncsphere_password
      - MONGODB_URI=mongodb://syncsphere:syncsphere_password@mongodb:27017/syncsphere
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
    depends_on:
      - postgres
      - mongodb
      - redis
      - kafka

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  audio_uploads:
